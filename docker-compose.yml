version: '3.8'

services:
  # MySQL データベース
  mysql:
    image: mysql:8.0
    container_name: gin-gorm-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gin_gorm_mvc
      MYSQL_USER: gin_user
      MYSQL_PASSWORD: gin_password
      TZ: 'Asia/Tokyo'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - gin-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis キャッシュ
  redis:
    image: redis:7-alpine
    container_name: gin-gorm-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gin-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # phpMyAdmin (オプション - データベース管理用)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: gin-gorm-phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8888:80"
    networks:
      - gin-network
    depends_on:
      mysql:
        condition: service_healthy

  # Redis Commander (オプション - Redis管理用)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: gin-gorm-redis-commander
    restart: always
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8889:8081"
    networks:
      - gin-network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  gin-network:
    driver: bridge
